{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parse-html.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["export function isObject (data){\n  return typeof data === 'object' && data !== 'null'\n}\n\nexport function def(data, key, value){\n  Object.defineProperty(data, key, {\n      enumerable: false,\n      configurable: false,\n      value: value\n  })\n}","// 我要重写 数组的方法 push 、shift、 unshift、 pop、 reverse、sort 、splice\n\n\nlet oldArrayMethods = Array.prototype\n// 原型链查找  先查找重写的 arrayMethods ，重写的没有，会继续向上查找\n// value.__proto__ = arrayMethods\n// arrayMethods.__proto__ = oldArrayMethods\nexport let arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n  'push',\n  'shift',\n  'unshift',\n  'pop',\n  'sort',\n  'splice',\n  'reverse'\n]\n\nmethods.forEach(method => {\n  arrayMethods[method] = function(...args){\n\n    console.log('用户调用了 push')\n    const result = oldArrayMethods[method].apply(this, args) // 调用了原生的方法\n\n    // push 添加的元素 可能还是一个对象\n    let inserted;\n    let ob = this.__ob__;\n    switch(method){\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2)\n\n      default:\n        break\n    }\n\n    if(inserted) ob.observeArray(inserted) // 将新增属性 继续观测\n\n    return result\n  }\n})\n\n\n\n\n\n\n","// 把 data 中数据 都是用 object.defineProperty 不能兼容 IE8 以下 Vue2 \nimport { isObject, def } from '../util/index'\nimport { arrayMethods } from './array.js'\n\nclass Observe{\n  constructor(value){\n    // vue 如果数据层次过多，需要递归的去解析 对象的属性 依次增加 set 和 get 方法\n    // vue3 使用了 proxy 提高了性能\n\n\n    def(value, '__ob__', this)\n    if(Array.isArray(value)){\n      // 如果是数组的话，不需要对 索引进行观察  因为有性能问题\n      // 前端开发一般通过 push 、 shift、unshift 操作数组  \n      value.__proto__ = arrayMethods\n\n      // 如果数组中是对象 ，我再监控\n      this.observeArray(value)\n    } else {\n     this.walk(value)\n    }\n  }\n\n  observeArray(value){\n    for(let i = 0; i < value.length; i +=1 ){\n      observe(value[i])\n    }\n  }\n\n\n  walk(data){\n    let keys = Object.keys(data);\n    keys.forEach(key => {\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n\nfunction defineReactive(data, key, value){\n  observe(value) // 递归实现深度检测\n   Object.defineProperty(data, key, {\n     get(){\n      return value\n     },\n     set(newValue){\n         console.log(\"更新数据\")\n        if(newValue === value) return \n        observe(newValue) //用户设置的也可能是对象\n        console.log(\"值发生变化了\")\n        value = newValue\n     }\n   })\n}\n\n\nexport function observe(data){\n  let isObj = isObject(data)\n  if(!isObj){\n    return ;\n  }\n\n  return new Observe(data)\n\n}","import {observe} from './observe/index'\n\nexport function initState(vm){\n  const opts = vm.$options\n  // console.log(opts)\n  // vue 的数据来源 属性 方法 数据 计算属性 watch\n  if(opts.props){\n    initProps(vm) \n  }\n  if(opts.methods){\n    initMethod(vm)\n  }\n  if(opts.data){\n    initData(vm)\n  }\n  if(opts.computed){\n    initComputed(vm)\n  }\n  if(opts.watch){\n    initWatch(vm)\n  }\n}\n\nfunction initProps(){}\nfunction initMethod(){}\nfunction initData(vm){\n  // console.log(vm.$options.data)\n  let data = vm.$options.data\n  data = typeof data == 'function' ? data.call(vm) : data\n  vm._data = data\n  // 对象劫持 用户改变了对象，我希望可以得到通知 刷新页面\n  // MVVM 数据变化驱动视图变化\n  observe(data) // \n\n}\nfunction initComputed(){}\nfunction initWatch(){}\n\n\n\n\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;    // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;  // <aaa:b>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nlet root = null;  // ast 语法树 的树根\nlet currentParent;  // 标识当前父亲是谁\nlet stack = []\nconst ELEMENT_TYPE = 1\nconst TEXT_TYPE = 3\n\nfunction createASTElement(tagName, attrs){\n    return {\n        tag: tagName,\n        type: ELEMENT_TYPE,\n        children: [],\n        attrs,\n        parent: null\n    }\n}\n\n\nfunction start(tagName, attrs){ \n    // 遇到开始标签，创建 \n    let element = createASTElement(tagName, attrs)\n    if(!root){\n        root = element\n    }\n    currentParent = element // 把当前元素 标记为 ast\n    stack.push(element)\n}\nfunction chars(text){\n    text = text.replace(/\\s/g, '')\n    if(text){\n        currentParent.children.push({\n            text,\n            type: TEXT_TYPE\n        })\n    }\n}\n\nfunction end (tagName){\n    let element = stack.pop()\n    // 标识当前这个 p 是属于 div 这个儿子的\n    currentParent =  stack[stack.length-1]\n    if(currentParent){\n        element.parent = currentParent\n        currentParent.children.push(element)  // 实现了树的父子关系\n    }\n}\n\nexport function parseHTML(html){\n    while(html){\n        let textEnd = html.indexOf('<');\n        if(textEnd === 0){\n            // 如果当前索引为 0 ，肯定是一个标签 开始标签 或 结束标签\n            let startTagMatch = parseStartTag() // 通过这个方法 获取匹配的结果  tagName   attrs\n            if(startTagMatch){ \n                // console.log(startTagMatch)\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            let endTagMatch = html.match(endTag)\n            if(endTagMatch){\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1]);\n                continue\n            }\n\n        }\n        let text;\n        if(textEnd >= 0){\n            text = html.substring(0, textEnd)\n        }\n        if(text){\n            advance(text.length)\n            chars(text) \n            continue\n        }\n    }\n\n    function advance(n){\n        html = html.substring(n)\n    }\n    function parseStartTag(){\n        let start = html.match(startTagOpen)\n        if(!start) return ;\n\n        const match = {\n            tagName: start[1],\n            attrs: []\n        }\n        if(start){\n            advance( start[0].length)  // 将标签删除\n        }\n        let end, attr\n        // while 循环秒用  \n        while((!(end = html.match(startTagClose))) && (attr = html.match(attribute))){\n            match.attrs.push({\n                name: attr[1],\n                value: attr[3] || attr[4] || attr[5]\n            })\n            advance(attr[0].length)  // 将属性删除\n        }\n        if(end){\n            (advance(end[0].length))\n            return match\n        }\n    }\n    return root\n}\n\n\n/*{ <div id='app'>\n    <p>hello</p>\n</div> }*/\n\n// ast 语法树\n// let root = {\n//     tag: 'div',\n//     attrs: [{\n//         name: 'id',\n//         value: 'app'\n//     }],\n//     parent: null,\n//     type: 1,\n//     children: {\n//         tag: 'p',\n//         attrs: [],\n//         parent: root,\n//         type: 1,\n//         children: [{\n//             text: 'hello',\n//             type: 3\n//         }]\n//     }\n// }\n\n","\nimport {parseHTML} from './parse-html'\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps(attrs){\n    let str = ''\n    for(let i = 0; i < attrs.length; i += 1){\n        let attr = attrs[i]\n        if(attr.name === 'style'){\n            // style = \"color: red\"  =>  {style: { color: 'red })\n            let obj = {}\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            });\n            attr.value = obj\n        }\n        str  += `${attr.name}: ${JSON.stringify(attr.value)},`\n    }\n    \n\n    return  `{ ${str.slice(0,-1)}}`\n}\n\nfunction genChildren (children) {\n    if(children.length > 0){\n        return `${ children.map(c =>  gen(c)).join(',')   }`\n    } else {\n        return false\n    }\n}\n\n//  _c  创建元素   _v 创建文本节点    _s 解析 \n\nfunction gen(node){\n    if(node.type == 1){\n        // 元素标签\n        return generate(node)\n    } else {\n        let text = node.text \n        //  a {{name}}  b {{age}}  c\n        // _v(\"a\" + _s(name) + \"b\" + _s(age) + \"c\")\n        // 正则的 lastIndex 问题 exec() \n        \n        let tokens = [];\n        let match, index;\n        let lastIndex = defaultTagRE.lastIndex = 0\n        while (match = defaultTagRE.exec(text)){\n            index = match.index\n            if(index > lastIndex){\n                tokens.push( JSON.stringify(text.slice(lastIndex,index)) )\n            }\n            tokens.push( `s(${match[1].trim() })`)\n            lastIndex = index + match[0].length\n        }\n\n        if(lastIndex < text.length) {\n            tokens.push( JSON.stringify(text.slice(lastIndex, index)))\n        }\n\n        return `_v(${tokens.join('+')})`\n    }\n}\n\n\n\n\nfunction generate(el) {\n    let code = `_c(\"${el.tag}\",${ \n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n    }${\n        el.children ? `,${genChildren(el.children)}` : ''\n    })`\n\n    return code\n}\n\n\n\n// ast 语法树 使用 对象 来描述原生语法    虚拟dom 使用 对象 描述 dom 节点\nexport function compileToFunction(template){\n    console.log(template)\n    // 解析为  ast 树\n    let root = parseHTML (template)\n    // 需要把 ast 语法树生成 render 函数 , 字符串拼接 （模板引擎）\n    // 将 ast 树，再次转换成 js 语法\n    console.log(root)\n\n    let code = generate(root)\n    console.log(code)\n\n\n    // <div id=\"app\"><p>hello {{name}}</p> hello </div>\n    // _c(\"div\", {id:app}, _c(\"p\", undefined, _v('hello' + _s('name'))). _v(hello))\n\n    // 所有的模板引擎实现，都要  new  Function with\n    // let renderFn = new Function()\n    let renderFn = new Function(`with(this){ return ${code} }`) \n    console.log(renderFn)\n    return renderFn\n}\n\n\n    // function() {\n    //     with(this){\n    //         return   _c(\"div\", {id:app}, _c(\"p\", undefined, _v('hello' + _s('name'))). _v(hello))\n    //       }\n    // }\n\n","import { initState } from './state'\nimport { compileToFunction } from './compiler/index.js' \n\nexport function initMixin(Vue){\n  // 初始化流程\n  Vue.prototype._init = function (options) {\n    // console.log(options)\n    \n    // 数据劫持\n    const vm = this;\n    vm.$options = options\n\n    initState(vm) // 分割代码\n\n\n    // 如果传入了 el 属性，需要将页面渲染出来， 就要实现挂载流程\n    if(vm.$options.el){\n      vm.$mount(vm.$options.el)\n    }\n  };\n\n  Vue.prototype.$mount = function(el){\n    const vm = this;\n    const options = vm.$mount;\n    el = document.querySelector(el)\n\n    // 默认 先会查找 有没有 render 没有 render 会用  template ， 没有 template 就用 el 中的内容\n    if(!options.render){\n      // 对模板进行编译\n      let template = options.template;\n      if(!template && el){\n        template = el.outerHTML\n        // 我们需要将 template 转化成  render 方法， vue 2.0 虚拟 dom\n      }\n      const render = compileToFunction(template)\n      options.render = render;\n\n    }\n  }\n}\n\n","// vue 核心源码 ， 只是 vue 的一个声明\n\nimport {initMixin } from './init'\n\nfunction Vue(options){\n  // 进行 vue 的初始化\n  this._init(options)\n}\n\n// 通过引入文件的方式 给 vue 原型上添加方法\ninitMixin(Vue)\n\n\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","observeArray","Observe","isArray","__proto__","walk","i","length","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","call","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","el","code","compileToFunction","template","renderFn","Function","initMixin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}